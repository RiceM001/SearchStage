{
  "code": 0,
  "data": {
    "records": [
      {
        "id": "1785879499670421505",
        "title": "Gradle 进阶学习之 Gradle插件",
        "description": "使用插件是现代自动化构建工具中一个非常重要的概念，Gradle 作为其中一个流行工具，通过插件提供了多种便利。以下是使用插件的几个主要原因：",
        "content": "# 1、使用插件的原因\n\n使用插件是现代自动化构建工具中一个非常重要的概念，Gradle 作为其中一个流行工具，通过插件提供了多种便利。以下是使用插件的几个主要原因：\n\n1. 促进代码重用\n\n   - **减少重复代码**：插件允许你重用在不同项目中执行相同功能的代码，减少了编写和维护相似代码的需要。\n\n   - **标准化流程**：插件通常封装了一组标准化的操作，使得在多个项目间实现构建流程的一致性变得更加容易。\n\n\n2. 提升工作效率\n\n   - **快速实现功能**：插件通常提供了一组预定义的任务，可以快速实现打包、测试、部署等功能，从而加速开发流程。\n\n   - **简化构建配置**：通过应用插件，可以避免编写复杂的构建脚本，因为插件已经提供了所需的配置。\n\n\n3. 项目模块化\n\n   - **解耦功能**：插件使得特定的构建功能模块化，这样可以更容易管理和更新这些功能，而不会影响到项目的核心构建脚本。\n\n   - **清晰的构建逻辑**：模块化还有助于保持构建逻辑的清晰，使得构建脚本更易于理解和维护。\n\n\n4. 自动化和便捷化\n\n   - **自动化流程**：插件可以自动化许多繁琐的构建任务，让开发者专注于更重要的业务逻辑。\n\n   - **用户友好**：许多插件提供了便捷的命令和配置选项，使得构建过程更加用户友好。\n\n\n5. 扩展项目功能\n\n   - **即插即用**：插件的可插拔特性意味着你可以轻松地为项目添加新的功能，而无需深入了解实现细节。\n\n   - **社区支持**：Gradle 拥有一个活跃的社区，提供了大量的插件，可以扩展构建系统的功能，满足特定的构建需求。\n\n\n6. 维护和更新\n\n   - **持续集成**：许多插件支持持续集成（CI）流程，可以与 Jenkins、Travis CI 等工具集成，自动化测试和构建流程。\n\n   - **易于更新**：插件的更新通常比核心构建系统更容易，因为它们是独立的组件。\n\n\n# 2、插件的作用\n\n插件在 Gradle 构建系统中扮演着至关重要的角色，它们为项目提供了额外的功能和自动化能力。以下是插件在项目构建过程中可以完成的一些事情：\n\n1. 添加任务（Task）\n\n   - **自定义任务**：插件可以向项目中添加新的任务，这些任务可以是执行测试、编译源代码、打包应用程序等。\n\n   - **任务配置**：插件还可以预配置某些任务，使得开发者不需要手动设置所有参数。\n\n\n2. 添加依赖配置\n\n   - **管理依赖**：插件可以帮助定义项目的依赖管理，包括外部库依赖、项目内部模块依赖等。\n\n   - **远程仓库**：插件可以配置远程仓库，如 Maven Central 或 JCenter，以便下载所需的库。\n\n\n3. 扩展项目属性和方法\n\n   - **扩展属性**：插件可以向项目添加新的属性，这些属性可以用于控制构建过程或存储配置信息。\n\n   - **扩展方法**：插件可以向项目添加新的方法，这些方法可以用于执行特定的构建逻辑或封装复杂的操作。\n\n\n4. 项目约定\n\n   - **目录结构**：应用特定的插件，如 Java 插件，会为项目设置一些默认的目录结构约定，例如 `src/main/java` 作为源代码目录。\n\n   - **构建生命周期**：插件还可以定义构建过程中的特定阶段，例如编译、测试、打包和部署。\n\n\n\n\n插件是 Gradle 强大的扩展机制，它们可以极大地简化构建配置，提供最佳实践，并允许开发者通过标准化的方式来构建项目。通过应用插件，你可以快速获得构建、测试、打包和依赖管理等自动化功能，同时保持项目的灵活性和可维护性。\n\n\n\n# 3、插件的分类和使用\n\n![image-20240420202646427](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240420202646427.png)\n\n## 3.1 脚本插件\n\n在 Gradle 中，脚本插件是一种允许你通过外部 Groovy 脚本文件来扩展构建逻辑的方法。这些脚本可以定义变量、任务、配置等，并且可以通过 `apply from` 语句被导入到主构建脚本中。\n\n### 3.1.1 脚本插件的创建\n\n1. **创建外部脚本文件**：你可以创建一个包含 Groovy 代码的文件，比如 `version.gradle`。\n\n```groovy\n// version.gradle\next {\n    company = \"阿杰\"\n    cfgs = [\n            compileSdkVersion: JavaVersion.VERSION_21\n    ]\n    spring = [\n            version: '6.0.0'\n    ]\n}\n```\n\n在这个脚本中，我们使用了 `ext` 来定义了一系列的属性，这些属性在导入脚本后可以在构建脚本中使用。\n\n### 3.1.2 脚本插件的应用\n\n2. **在构建脚本中应用脚本插件**：在你的 `build.gradle` 文件中，使用 `apply from` 来加载外部脚本。\n\n```groovy\n// build.gradle\napply from: 'version.gradle'\n\ntask taskVersion {\n    doLast {\n        println \"博主的昵称：${company}, JDK版本是${cfgs.compileSdkVersion}, 版本号是${spring.version}\"\n    }\n}\n```\n\n在这个构建脚本中，我们应用了之前创建的 `version.gradle` 脚本。然后我们定义了一个名为 `taskVersion` 的任务，它会在执行时打印出从脚本插件中导入的变量。\n\n3. **运行构建**：在命令行中运行 Gradle 构建，执行 `taskVersion` 任务。\n\n```shell\ngradle taskVersion\n```\n\n![image-20240420203619061](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240420203619061.png)\n\n执行上述命令后，Gradle 会加载并执行 `build.gradle` 文件中的指令，包括应用外部脚本插件和执行 `taskVersion` 任务。\n\n### 3.1.3 注意事项\n\n- **脚本位置**：确保外部脚本文件的位置是正确的，并且 Gradle 能够找到它。\n- **安全性**：从网络上加载脚本时要注意安全性，确保脚本来源可靠，避免执行恶意代码。\n\n### 总结\n\n脚本插件是 Gradle 提供的一种灵活的扩展机制，允许你通过外部 Groovy 脚本来添加构建逻辑。这种方式非常适合于在多个项目之间共享配置或创建自定义的构建行为。通过使用脚本插件，可按功能把我们的脚本进行拆分一个个公用、职责分明的文件，然后在主脚本文件引用，\n\n比如：将很多共有的库版本号一起管理、应用构建版本一起管理等。可以使构建脚本更加模块化和可重用。\n\n## 3.2 对象插件\n\nGradle 的对象插件，也称为二进制插件或 Java 插件，是通过实现 `org.gradle.api.Plugin` 接口的 Java 类来提供的。这些插件为项目提供了特定的构建功能，并且可以通过一个唯一的插件 ID 来应用到项目中。\n\n![image-20240420204109332](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240420204109332.png)\n\n### 3.2.1 内部插件[核心插件]\n\nGradle 提供了一系列的核心插件，这些插件覆盖了多种常见的构建需求，包括但不限于：\n\n- **Java**：支持构建任何类型的 Java 项目。\n- **C++ Application**：支持在 Windows、Linux 和 macOS 上构建 C++ 应用程序。\n- **Application**：支持构建基于 JVM 的可运行应用程序。\n- **WAR**：支持构建和打包基于 WAR 的 Java Web 应用程序。\n- **Checkstyle**：使用 Checkstyle 对项目中的 Java 源文件执行质量检查。\n- **Eclipse**：为构建生成 Eclipse 项目文件。\n- **IntelliJ IDEA**：为构建生成 IDEA 项目文件。\n\n**查找核心插件：**\n\n要查找 Gradle 提供的所有核心插件，可以访问官方文档中的插件参考页面：\n\n- [Gradle 官方插件参考](https://docs.gradle.org/current/userguide/plugin_reference.html)\n\n在这里，你可以找到每个插件的描述、提供的配置和如何应用该插件的指导。\n\n#### 使用 Java 插件\n\n以下是几种应用 Java 插件到项目中的方法：\n\n1. **使用插件 ID**：\n\n   ```\n   apply plugin: 'java'\n   ```\n\n   这是应用 Java 插件的推荐方式，简洁且易于理解。\n\n2. **使用闭包**：\n\n   ```\n   apply {\n       plugin 'java'\n   }\n   ```\n\n   这种方式使用了一个闭包来包裹插件 ID，这在需要应用多个插件时非常有用。\n\n3. **使用全类名**：\n\n   ```\n   apply plugin: org.gradle.api.plugins.JavaPlugin\n   ```\n\n   这种方式直接指定了插件的完整类名，这在 IDE 中自动完成代码时可能会看到。\n\n4. **使用导入的类**：\n\n   ```\n   apply plugin: JavaPlugin\n   ```\n\n   如果 `org.gradle.api.plugins` 包已经被导入，你可以直接使用类名来引用插件。\n\n> 插件 ID 的唯一性：\n>\n> 每个插件都有一个唯一的插件 ID，这有助于避免名称冲突。通常，插件 ID 会采用应用包名来确保其唯一性，如 `java` 对应的完整类名为 `org.gradle.api.plugins.JavaPlugin`。\n\n### 3.2.2 第三方插件\n\n在使用第三方发布的二进制插件时，通常需要确保 Gradle 能够从正确的仓库中获取这些插件。以下是两种常见的方法来应用这些插件：\n\n#### 1.  传统应用方式\n\n使用 `buildscript` 块，你需要指定插件的类路径和仓库：\n\n```groovy\nbuildscript {\n    ext {\n        springBootVersion = \"2.3.3.RELEASE\"\n    }\n    repositories {\n        mavenLocal()\n        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }\n        jcenter()\n    }\n    dependencies {\n        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")\n    }\n}\n\napply plugin: 'org.springframework.boot'\n```\n\n在这个例子中，我们首先定义了 `buildscript` 块，它告诉 Gradle 从哪里查找插件。`repositories` 块可以包含多个仓库，这里包括了 Maven 本地仓库、阿里云的 Maven 仓库和 JCenter。\n\n#### 2. plugins DSL 方式\n\nGradle 引入了一种新的 `plugins` 块，它提供了一种更简洁的方式来应用插件，特别是当插件被托管在 [Gradle 插件仓库](https://plugins.gradle.org/) 时：\n\n```groovy\nplugins {\n    id 'org.springframework.boot' version '2.4.1'\n}\n```\n\n使用 `plugins` 块时，Gradle 会自动从 Gradle 插件仓库中解析插件的坐标，因此你不需要显式地指定类路径和仓库。\n\n#### 3. 注意事项\n\n1. **位置**：在使用传统方式时，`buildscript` 块必须位于 `build.gradle` 文件的顶部。而 `plugins` 块则没有这个限制，可以放在文件的任何位置。\n\n2. **格式**：`plugins` 块使用 `id` 和 `version` 来指定插件的 ID 和版本，这使得构建脚本更加清晰和易于管理。\n\n3. **自动解析**：当使用 `plugins` 块时，Gradle 会自动解析插件的坐标，这意味着你不需要手动添加仓库和类路径。\n\n4. **兼容性**：确保你使用的 Gradle 版本与第三方插件的版本兼容。\n\n#### 总结\n\n使用 `plugins` 块可以简化插件的应用过程，特别是当你使用托管在 Gradle 插件仓库中的插件时。这种方式使得构建脚本更加简洁，同时减少了配置错误的可能性。然而，在一些情况下，你可能仍然需要使用传统的 `buildscript` 方法，比如当插件不是托管在 Gradle 插件仓库中，或者你需要自定义插件的类路径和仓库时。\n\n### 3.2.3 用户自定义插件\n\n在 Gradle 中，用户自定义插件是一种强大的扩展构建功能的方式。自定义插件允许你封装逻辑，创建新的任务，甚至向项目添加自定义的扩展属性和方法。这些插件可以用于单个项目，也可以被设计为可重用和可共享的。\n\n#### 1. 示例\n\n```groovy\n/**\n * GreetingPluginExtension 接口定义了问候插件的扩展属性。\n * 这个接口规定了插件配置中可以使用的两个属性：getMessage 和 getGreeter。\n */\ninterface GreetingPluginExtension {\n    // getMessage 方法：获取问候语。\n    Property<String> getMessage()\n    // getGreeter 方法：获取发出问候的实体。\n    Property<String> getGreeter()\n}\n\n/**\n * GreetingPlugin 类实现了 Plugin 接口，为 Gradle 提供了一个问候插件。\n * 这个插件向项目中添加了一个 'hello' 任务，该任务在执行时会打印一条问候语。\n */\nclass GreetingPlugin implements Plugin<Project> {\n    /**\n     * apply 方法将插件应用到指定的项目上。\n     * @param project 要应用插件的项目实例。\n     */\n    void apply(Project project) {\n        // 创建一个名为 'greeting' 的插件扩展，允许用户自定义问候语和发出问候的实体。\n        def extension = project.extensions.create('greeting', GreetingPluginExtension)\n\n        // 创建一个名为 'hello' 的任务，任务执行时会打印配置的问候语。\n        project.task('hello') {\n            doLast {\n                // 打印问候语，使用插件扩展中配置的消息和发出问候的实体。\n                println \"${extension.message.get()} from ${extension.greeter.get()}\"\n            }\n        }\n    }\n}\n\n// 应用 GreetingPlugin 插件到当前的 Gradle 项目中。\napply plugin: GreetingPlugin\n\n// 配置插件扩展，设置问候语和发出问候的实体。\ngreeting.message = 'Hello from plugin'\ngreeting.greeter = 'Gradle'\n```\n\n![image-20240420212341025](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240420212341025.png)\n\n#### 2. 用户自定义插件的局限性\n\n虽然用户自定义插件非常灵活，但它们通常局限于定义它们的项目。这意味着，如果你在一个项目中定义了一个自定义插件，它可能不适用于其他项目，除非你将插件逻辑提取到一个独立的类或 JAR 文件中，并在其他项目中包含这个类或 JAR 文件。\n\n#### 3. 共享自定义插件\n\n为了使自定义插件可重用和共享，你可以：\n\n- **构建独立插件**：将插件代码放入一个独立的项目中，构建为 JAR 文件，然后发布到本地仓库或远程仓库。\n- **使用 `buildSrc`**：对于小型或特定于项目的插件，可以将插件代码放置在项目的 `buildSrc` 目录中。这样，插件可以被当前项目和子项目使用。\n\n#### 总结\n\n自定义插件是 Gradle 插件系统的重要组成部分，它们允许开发者根据自己的需求扩展构建过程。通过创建自定义插件，你可以增加新的构建任务，定义配置选项，甚至提供全新的构建逻辑。自定义插件的开发需要对 Gradle 插件机制有深入的理解，并且需要遵循一定的设计原则以确保插件的可重用性和可维护性。\n\n# 4、buildSrc 项目\n\n`buildSrc` 是 Gradle 提供的一个特殊目录，用于存放构建过程中使用的自定义 Groovy 插件和脚本。这个目录被视为一个独立的 Gradle 项目，你可以在这个目录下编写自己的插件和脚本，它们可以在整个构建过程中被重用。 \n\n以下是如何使用 `buildSrc` 目录的步骤：\n\n## 4.1 创建 `buildSrc` 模块\n\n![。](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502095946202.png)\n\n将 buildSrc 从 included modules 移除,重新构建。\n\n![image-20240502100124262](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502100124262.png)\n\n然后只保留 build.gradle 和 src/main 目录，其他全部删掉\n\n![image-20240502100230541](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502100230541.png)\n\n## 4.2 然后修改 Gradle 中的内容\n\n```groovy\nplugins {\n    id 'java'\n    id 'groovy' // 必须\n    id 'maven-publish'\n    id 'java-gradle-plugin' // 必须\n}\n\ngroup = 'com.jie'\nversion = '1.0'\n\nrepositories {\n    google()\n    jcenter()\n    mavenCentral() //必须\n}\n\n// 项目入口 插件可以使用java groovy kotlin 三种语言进行编写\nsourceSets {\n    main {\n        groovy {\n            srcDir 'src/main/groovy'\n        }\n        java {\n            srcDir 'src/main/java'\n        }\n    }\n}\n```\n\n![image-20240502101755522](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502101755522.png)\n\n## 4.3 创建入口目录，在 src/main 下创建代码入口目录\n\n![image-20240502101040546](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502101040546.png)\n\n\n\n## 4.4 实现插件代码\n\n```groovy\npackage com.jie\n\nimport org.gradle.api.Plugin\nimport org.gradle.api.Project\n\nclass Txt implements Plugin<Project> {\n    @Override\n    void apply(Project project) {\n        project.task(\"testPlugin\") {\n            doLast {\n                println(\"Hello,Gradle Plugin\")\n            }\n        }\n    }\n}\n```\n\n## 4.5 配置插件入口\n\n```groovy\n// 插件入口\ngradlePlugin {\n    plugins {\n        DependenciesPlugin {\n            id = 'com.jie.testPlugin'\n            implementationClass = 'com.jie.Txt'\n        }\n    }\n}\n```\n\n![image-20240502102521585](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502102521585.png)\n\n## 4.6 在 module 引入我们写的插件\n\n![image-20240502102601436](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502102601436.png)\n\n然后执行插件的Task。\n\n![image-20240502102704637](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502102704637.png)\n\n这种形式的写法，在我们整个工程的 module 都可以使用，但也只是限制在本工程，其他工程不能使用。\n\n# 5、编写在单独项目中\n\n有时候我们需要一个插件在多个工程中使用，这时候我们就需要把插件上传 maven 中。\n\n## 5.1 新建Module\n\n新建一个名称为plugin的Module。\n\n![image-20240502103519070](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502103519070.png)\n\n![image-20240502103344774](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502103344774.png)\n\nGradle Plugin可以用java写，也可以用kotlin、groovy，喜欢用什么就可以在main文件下新建对应语言的文件夹接口，比如groovy文件夹。\n\n## 5.2 新建文件添加依赖\n\n### 5.2.1 添加依赖\n\n![image-20240502104334240](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502104334240.png)\n\n### 5.2.2 添加类\n\n之前是用的Groovy写，这次用 Java。\n\n![image-20240502104420578](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502104420578.png)\n\n### 5.2.3 添加插件入口\n\n```groovy\n// 插件入口\ngradlePlugin {\n    plugins {\n        DependenciesPlugin {\n            id = 'com.jie.plugin.txtPlugin'\n            implementationClass = 'com.jie.plugin.Txt'\n        }\n    }\n}\n```\n\n![image-20240502111914030](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502111914030.png)\n\n到此，Plugin的基本雏形就有了。\n\n## 5.3 发布插件\n\n### 5.3.1 添加依赖\n\n首先，比较常用的仓库是maven，在plugin>build.gradle文件中先依赖一个maven发布的插件`maven-publish`\n\n![image-20240502104703983](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502104703983.png)\n\n### 5.3.2 添加发布配置\n\n```groovy\npublishing {\n    publications {\n        myLibrary(MavenPublication) {\n            groupId = 'com.jie.plugin' //指定GAV坐标信息\n            artifactId = 'txt'\n            version = '1.0'\n\n            from components.java    //发布jar包\n        }\n    }\n\n    repositories {\n        maven {\n            url \"$rootDir/lib/release\"\n        }\n\n        //发布项目到私服中\n//    maven {\n//        name = 'myRepo' //name属性可选,表示仓库名称，url必填\n//        //发布地址:可以是本地仓库或者maven私服\n//        //url = layout.buildDirectory.dir(\"repo\")\n//        //url='http://my.org/repo' // // change URLs to point to your repos, e.g. http://my.org/repo // //认证信息:用户名和密码\n//        credentials {\n//            username = 'joe'\n//            password = 'secret'\n//        }\n//    }\n    }\n}\n```\n\n![image-20240502105217729](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502105217729.png)\n\n### 5.3.3 执行发布操作\n\n![image-20240502110731057](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502110731057.png)\n\n![image-20240502111207922](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502111207922.png)\n\n没有出现可能是idea 没有加载出来，刷新一下项目即可。\n\n![image-20240502111304684](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502111304684.png)\n\n### 5.3.4 使用\n\n在settings.gradle文件中配置插件仓库地址\n\n```groovy\npluginManagement {\n    repositories {\n        maven {\n            url \"$rootDir/lib/release\"\n        }\n    }\n}\n```\n\n![image-20240502111441643](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502111441643.png)\n\n在project>build.gradle文件中添加插件依赖\n\n```groovy\nbuildscript {\n    dependencies {\n        classpath('com.jie.plugin:txt:1.0')\n    }\n}\n```\n\n![image-20240502112020994](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502112020994.png)\n\n再建一个module进行使用。\n\n![image-20240502112406958](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502112406958.png)\n\n编译看效果：\n\n![image-20240502112520352](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502112520352.png)\n\n在控制台看到自定义插件的输出，说明自定义插件就已经生效了。\n\n最后，至于如何写一个插件，能帮助项目更加自动化或者便捷化，是值得大家未来需要长期思考、关注、努力的点。\n\n# 6、插件的关注点\n\n## 6.1 第一点:插件的引用 \n\n```groovy\napply plugin: '插件名' \n```\n\n## 6.2 第二点:主要的功能[任务]\n\n当我们在工程中引入插件后，插件会自动的为我们的工程添加一些额外的任务来完成相应的功能。以 Java 插件为例，当\n\n我们加入 java 插件之后，就加入了如下功能：\n\n![image-20240502112825658](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502112825658.png)\n\n具体大家可通过 gradle tasks 查看加入某个插件前后的区别。\n\n> 说明：Gradle 中的任务依赖关系是很重要的，它们之间的依赖关系就形成了构建的基本流程。\n\n## 6.3 第三点:工程目录结构\n\n一些插件对工程目结构有约定，所以我们一般遵循它的约定结构来创建工程，这也是 Gradle 的“约定优于配置”原则。\n\n例如 java 插件规定的项目源集目录结构如下所示：\n\n![image-20240502112922363](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502112922363.png)\n\n如果要使用某个插件就应该按照它约定的目录结构设置，这样能大大提高我们的效率，当然各目录结构也可以自己定义\n\n## 6.4 第四点：依赖管理\n\n比如前面我们提到的 依赖的类型[[依赖管理](https://blog.csdn.net/weixin_53041251/article/details/138009776?spm=1001.2014.3001.5502)]部分，不同的插件提供了不同的依赖管理。\n\n## 6.5 第五点：常用的属性\n\n例如：Java 插件会为工程添加一些常用的属性,我们可以直接在编译脚本中直接使用。\n\n| 属性名称                     | 类型        | 默认值                          | 描述                              |\n| :--------------------------- | :---------- | :------------------------------ | :-------------------------------- |\n| reportsDirName               | String      | reports                         | 生成报告的目录名称                |\n| reportsDir                   | File (只读) | buildDir/reportsDirName         | 生成报告的目录                    |\n| testResultsDirName           | String      | test-results                    | 生成测试.result.xml文件的目录名称 |\n| testResultsDir               | File (只读) | reportsDir/testReportDirName    | 生成测试报告的目录                |\n| libsDirName                  | String      | libs                            | 生成 lib 库的目录名称             |\n| libsDir                      | File (只读) | buildDir/libsDirName            | 生成 lib 库的目录                 |\n| distsDirName                 | String      | distributions                   | 生成发布文件的目录名称            |\n| distsDir                     | File (只读) | buildDir/distsDirName           | 生成发布文件目录                  |\n| docsDirName                  | String      | docs                            | 生成帮助文档的目录名称            |\n| docsDir                      | File (只读) | buildDir/docsDirName            | 生成帮助文档的目录                |\n| dependencyCacheDirNameString | String      | dependency-cache                | 存储缓存资源依赖信息的目录名称    |\n| dependencyCacheDir           | File (只读) | buildDir/dependencyCacheDirName | 存储缓存资源依赖信息的目录        |\n\n# 7 、Java 插件分析\n\n参考官网：https://docs.gradle.org/current/userguide/plugin_reference.html,以 Java 插件为例，讲解需要关注的几点：\n\n## 7.1 第一点：我们要关注插件使用\n\n```groovy\nplugins {\n\tid 'java' \n}\n```\n\n## 7.2 第二点：我们要关注插件的功能\n\n我们可通过官方文档介绍了解某个插件功能或者百度、再或者大家可以通过 gradle tasks 查看加入 java 插件前后的区别。\n\n## 7.3 第三点：项目布局\n\n一般加入一个插件之后，插件也会提供相应的目录结构，例如：java 插件的目录结构\n\n![image-20240502113555425](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502113555425.png)\n\n当然这个默认的目录结构也是可以改动的例如：\n\n```groovy\nsourceSets {\n    main {\n        java {\n            srcDirs = ['src/java']\n        }\n        resources {\n            srcDirs = ['src/resources']\n        }\n    }\n}\n```\n\n也可设置源集的属性等信息。\n\n## 7.4 第四点：依赖管理：以 **java** 插件为例，提供了很多依赖管理项\n\n![image-20240502113716311](https://yiqiezonghuiguiyupingdan.oss-cn-hangzhou.aliyuncs.com/blw210/2024/image-20240502113716311.png)",
        "category": "文章",
        "cover": "https://pic.code-nav.cn/post_cover/1620630456775032833/SSD4egm5-gradle-logo.png",
        "language": null,
        "externalLink": null,
        "shortLink": null,
        "componentName": null,
        "viewNum": 8,
        "thumbNum": 1,
        "favourNum": 1,
        "commentNum": 0,
        "priority": 0,
        "userId": "1620630456775032833",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2024-05-02 11:50:27",
        "updateTime": "2024-05-05 11:23:28",
        "user": {
          "id": "1620630456775032833",
          "planetCode": "3790",
          "userName": "叫我阿杰好了",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1620630456775032833/VD8sEpIL-微信图片_20230523085336.jpg",
          "gender": 1,
          "userProfile": "目前技术社交账号，CSDN JAVA领域优秀创作者，阿里云专家博主。\n微信公众号：叫我阿杰好了",
          "userRole": "vip",
          "interests": [
            "资源",
            "Java",
            "GitHub",
            "面试题"
          ],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": "已工作",
          "company": null,
          "job": "后端",
          "workYear": 3,
          "direction": null,
          "goal": null,
          "github": null,
          "blog": "https://blog.csdn.net/weixin_53041251?spm=1000.2115.3001.5343",
          "score": 35,
          "coin": 20,
          "followeeNum": 2,
          "followNum": 3,
          "followStatus": null,
          "vipExpireTime": "2025-03-12 23:57:24",
          "lastLoginTime": null,
          "createTime": "2023-02-01 11:49:45",
          "updateTime": "2024-05-02 14:50:48"
        },
        "tags": [
          "文章",
          "Java"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1785476464704094210",
        "title": "双非-大三-Java后端",
        "description": "鱼皮哥，目前大三，帮我看看学习计划和简历有没有什么问题",
        "content": "**个人介绍：**\n25届双非软件工程，Java后端选手。最近真是越来越焦虑了，人比人气死人，班上同学去年10月找了个培训班，上个月找到了哈啰的实习，据我了解，班上已经有好几个人去报那个线下培训班了。我也不知道自己做的能不能有结果，现在每天就是背牛客上的面经，跟着代码随想录刷算法题，刷的慢，听说得刷3遍才能得心应手，目前才刚刷到二叉树。项目的话是做了鱼皮的API开放平台和OJ系统，API平台是跟着星球大佬的分享深入学习了扩展并实现了上线，OJ项目就粗略过了一遍（为了让简历上的项目好看点）。目前的学习计划就是，在刷面经和刷算法的基础上，差缺补漏，正在学习黑马的JUC并发编程视频，再学习尚硅谷的JVM精讲视频。之前学习过鱼皮的聚合搜索项目，也是粗略过了一遍，现在打算认认真真学习一下代码，提高自己的编码水平。这就是目前的计划，求鱼皮哥指点一下学习计划。\n\n**我的问题**：\n1. 目前我的学习规划的问题所在？\n2. 鱼皮哥给我学习计划指点一下？\n4. 简历有哪些需要修改完善？需要添加新的学习点（例如ES）进去吗？\n\n简历链接：https://laoyujianli.com/share/g3BiLf",
        "category": "文章",
        "cover": null,
        "language": null,
        "externalLink": null,
        "shortLink": null,
        "componentName": null,
        "viewNum": 31,
        "thumbNum": 1,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1779390607949635586",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2024-05-01 09:08:56",
        "updateTime": "2024-05-05 14:17:55",
        "user": {
          "id": "1779390607949635586",
          "planetCode": "31582",
          "userName": "无名",
          "userAvatar": null,
          "gender": null,
          "userProfile": null,
          "userRole": "vip",
          "interests": null,
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": null,
          "goal": null,
          "github": null,
          "blog": null,
          "score": 0,
          "coin": 0,
          "followeeNum": 0,
          "followNum": 0,
          "followStatus": null,
          "vipExpireTime": "2025-01-17 09:52:27",
          "lastLoginTime": null,
          "createTime": "2024-04-14 14:05:55",
          "updateTime": "2024-05-01 08:21:40"
        },
        "tags": [
          "文章",
          "简历"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1785363333986254849",
        "title": "伙伴匹配系统第五集跨域携带cookies报错",
        "description": null,
        "content": "前端配置了myAxios.defaults.withCredentials=true;//让ajax携带cookie\n之后要是还是报错在后端的controller中加上注解：\n@CrossOrigin(origins = \"http://localhost:5173\",allowCredentials = \"true\")\n\n# 解释\n@CrossOrigin(origins = \"http://localhost:5173\",allowCredentials = \"true\")\n - 前半部分是允许该地址进行跨域  origins = \"http://localhost:5173\"\n - 后半部分是允许携带凭证        allowCredentials = \"true\"\n-  allowCredentials默认值是false",
        "category": "文章",
        "cover": null,
        "language": null,
        "externalLink": null,
        "shortLink": null,
        "componentName": null,
        "viewNum": 4,
        "thumbNum": 1,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1709383604834004993",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2024-05-01 01:39:23",
        "updateTime": "2024-05-04 00:47:58",
        "user": {
          "id": "1709383604834004993",
          "planetCode": "27894",
          "userName": "gnod",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/bCgeiaz0sNdY1aia6f1UxY1rAwn34KlQOccZghzVF95s4eWxTeJQdRg8Yen2J3k3DuI5UvoiaYAiaRxa7SmibfcuZuA/132",
          "gender": 1,
          "userProfile": null,
          "userRole": "vip",
          "interests": [],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": null,
          "goal": null,
          "github": null,
          "blog": null,
          "score": 0,
          "coin": 0,
          "followeeNum": 0,
          "followNum": 0,
          "followStatus": null,
          "vipExpireTime": "2024-10-02 11:34:03",
          "lastLoginTime": null,
          "createTime": "2023-10-04 09:43:04",
          "updateTime": "2024-02-01 16:08:47"
        },
        "tags": [
          "文章"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1784548174032011265",
        "title": "挺看好的一位实习生，顶峰见！",
        "description": null,
        "content": "大家好，我是程序员鱼皮。今天我要分享自己团队里一位全栈实习生的实习总结。\n\n在实习期间，这位同学参与了多个项目的工作，包括企业动态公告系统的开发、企业周边系统的搭建、撰写技术教程、开发 IDEA 插件、构建云端管理平台等等。\n\n实习近 3 个月，我见证了他的高速成长，无论是全栈开发能力、还是软实力的提升都很大。\n\n以下是他的实习总结，给大家参考：\n\n\n\n## 鱼厂实习总结\n\n时光飞逝，转眼间在鱼厂的三个月的实习生活已经结束我也要回学校继续大三学习生活，常言天下没有不散的宴席，但分别的时候还是非常的不舍的。\n\n总体而言，实习经历我是非常满意的，并且能明显感受到自己的成长非常大。下面我来详细地总结一下我的实习生活、技术、以及软实力的成长，并且把我的经验分享给大家！\n\n\n\n### 团队氛围\n\n我们是一个年轻的团队，氛围真的非常好，没有任何所谓 “职场官腔” 这 一说，大家都十分好相处。\n\n公司有定期的团建，会去户外玩密室逃脱（上海的密室逃脱体验感真的很好，NPC 很专业）、一起运动打羽毛球、射箭，当然对于我这个桌游的重度爱好者来说，最开心的还是大家聚在一起玩桌游，后来我发现原来 **打桌游是公司文化**，周五大家工作不忙的时候都会一起玩，十分欢乐。\n\n还有，公司的饮食文化也很丰富，经常会一起聚餐，工作日老板请吃西餐是不是想想就爽；且公司有零食提供，不用担心写代码会饿着。\n\n\n\n### 编程领路人 > 老板\n\n首先很感谢鱼皮给我这次实习的机会，**其实这种感觉还挺奇妙的，自己的编程学习上的引路人变成了老板** 。平时交流上不管是工作还是生活也非常平易近人，没有因为我是一名实习生就忽略我的感受，性格也是比较和蔼的。刚开始我还没有很融入的时候会与我交流并给出建议，不会像一些领导一样当众训斥你，当然有时候员工犯了一些低级错误，比如代码不审核就上线，还是要批评的。\n\n可以给分享几点鱼皮哥给我的建议，我觉得也同时适用于大家的：\n\n1）养成开发记录的习惯，具有主人公意识\n\n2）对于工作进度及时反馈，如果有压力需要提出、抛出风险\n\n3）注重代码规范，提交规范\n\n4）大胆表达，锻炼和提高自己的沟通能力\n\n5）主动去争取机会，机会永远是自己去争取的，不要相信天上掉馅饼（我的实习机会就是主动和鱼皮沟通争取来的）\n\n以下为了保护隐私，均使用脱敏后的名字 \uD83D\uDCAD：\n\n我在鱼厂认识的第一个同事，也是第一个和我一起合租的舍友松柏（后端同学），松柏就比我大一届，但是我能非常真切的感受到业务技术能力要比我强很多很多，平时学习技术上很多不懂的问题都会问他，也得到耐心了的答复，虽然我知道很多问题都是比较基础的，这一点真的很感谢松柏哥的帮助。\n\n平时在交流上也很开心，很多时候我们都会一块回租房的地方吃晚饭、看鱼皮直播、聊聊游戏、爱好与人生。还有，我们共同的特点就是早上起不来，虽然鱼厂是 10 点上班，还是很困，我们的口号是 “今天星期四，明天星期五，后天又是周末了”。\n\n后面又认识了 LX 和 CQ ，他们是带我做项目的导师，一个负责前端一个负责后端。记得刚来公司那一会我的业务水平很差，很多技术、写文档的规范也不了解，只能一直问 CQ，我感觉 CQ 哥当时应该是对我挺无奈的，很多基础的东西也不会，没想到第一个带的实习生就这么菜，不过虽然嘴上说是基础问题，但是会给我解答并没有直接不管我了。那段时间还挺难过的，会怀疑自己、焦虑不安，**直到我收到了 CQ 五千字的工作建议与技术学习建议** ，我真的非常感动，虽然我当时技术不行，但是我想的是我必须要做出改变，于是在下班之后我开始学习那些工作中要用到但是是我的短板的技术，个人感觉还是有所进步的，下面的模块会详细介绍~\n\n![](https://pic.yupi.icu/1285/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_fa3e9139-879e-428c-a63c-717c463a4cea.png)\n\n虽然我的工作是全栈实习生，但是我的前端其实只能算是写过，并没有系统学习过。因此在写项目的过程中，特别是前端这一块会磕磕碰碰，我的前端导师 LX 会给我技术上的指导，会告诉我用什么技术可以实现让我自己去摸索，后来我意识到 “只有自己学会去解决问题才是成长”。LX 给我的建议就是先打好基础，弄懂 JS 的基础语法，再去学框架会很快，我觉得这是十分科学的，也建议想学前端的同学按照这个顺序来学。\n\n不过我想，回忆起来最快乐的是午休时间打洛克王国吧，我们俩用 6、7 年前的宠物被现在的神宠吊打 \uD83D\uDE2D，我想要是用钻研技能的热情来学技术获取能更厉害一些 \uD83D\uDE02。\n\n我们中午同事基本都会一起出去吃午饭，小 y 的那一句 “拉面、广场、米粉王” 已经深深刻在我的脑海里，我寻思着果然有当产品经理的天赋啊，把问题都抛给程序员了\uD83D\uDE1D。小y 是公司的运营，也是编程导航的运营，平时虽然交流的不多（因为和开发同学交流多一些），但是还是非常能感受到他的热情，特别是每次玩桌游的时候都会跟我说 “自己人，别搞”，虽然他跟谁都说是自己人。\n\n之后，我又认识了我们公司另一位前端大佬阿星也是元老级员工，他教会了我很多 React 中开发的技巧以及 Ant Design Pro 框架的使用，并且给我推荐了一份学习资源：《React Hooks 核心原理与实战》，讲的真的非常好，新手也能看懂，高手更能理解其中精髓。\n\n不过我认为阿星更适合教学，比如他会教会我在前端如何去定位问题，用什么技术去解决问题、如何阅读官方文档等会给我举例子讲解，很期待之后能看到他直播讲解前端的知识，当然印象很深的是他请我们喝的柠檬茶，至于什么原因可以去看看鱼皮的公众号了解 —— [员工写了个大 BUG，网站痛失 300 元！](https://mp.weixin.qq.com/s/jemiaYwhzaAoB1PO2j8Z7A)。\n\n\n\n### 技术成长\n\n我目前大三在读，平时学技术的时候是偏 Java 后端，也会一点前端，入职的时候鱼皮哥给我安排的是全栈实习生的工作，我个人认为我在整个实习期做的事还是很多的，对我技术成长帮助很大。整个实习培养的过程是循序渐进并且能学到真材实料的，并不是像网上传言找一个实习生来打杂。会有清晰的需求，要做什么并且有意义的去做。\n\n以下我分几个阶段去讲：\n\n\n\n#### 1、线上实习\n\n刚开始线上的时候给我安排的主要是熟悉公司的工作，包括开发规范、公司内部后端代码、阅读公司的已有技术业务的沉淀以及同事的日常工作记录，这里因为隐私原因没法给大家透露细节可以参考星球内部分享过的 **企业级开发流程** 以及 **阿里巴巴开发手册**，但是能给到大家的建议就是，刚开始工作的时候 **一定一定要仔细研读公司的开发规范和提交规范** 。如果规范上写明的要求，你在写代码的时候还是没有注意是一定会被同事批评的，想想你的同事写了一堆屎山代码让你来维护你气不气。\n\n其次就是，强烈建议大家阅读 [编程导航](https://mp.weixin.qq.com/s/AjD2dKA5br0htPo1iqzkBQ) 的后端模板代码，这一点是我刚进公司松柏就给我的建议，多读高手写的代码多去调试并且做到真正的理解内化，理解每一个函数、每一个类的作用是什么，以及为什么要这么设计，一些技术实现的原理是什么，**我敢说如果大家能把编程导航后端模板那一套东西吃透，至少在实习阶段你肯定是能干活的，并且80% 的业务也是能够上手的** ，那有同学可能会问还有 20% 呢？不用担心这个阶段暂时也不需要你来做。\n\n再之后给我安排了一些调研的工作，并产出调研文档，了解到了 AI 搜索引擎的产品。这一块给我 **最大的感受就是工作与在校学习的差别 ，在校的时候可能老师会给你找到资料、实现方法等，甚至把代码都给你改改就能使用，但是在公司我们需要做产品调研、技术调研、方案可行性的思考等。建议大家自己在做项目的时候也要养成调研的习惯并思考：这个需求到底有没有做的意义。\n\n技术方面，主要是在学习 Java 的网络爬虫知识，在编程导航聚合搜索项目的第二期里有讲到，我还开发了一个自动化填写问卷的小脚本。\n\n\n\n#### 2、线下实习\n\n之后来线下，公司有配备工作 Mac 电脑（Mac 写代码是真得舒服除了不能打游戏 hhh），熟悉了几天，鱼皮哥就给了一个独立负责项目的机会，让我单独完成动态公告系统。\n\n简单介绍一下这个项目，在面对网站故障、需要通知用户或进行临时公告时，为了提供一种简便而灵活的方式，我们希望设计一个通用的公告系统。该系统允许管理员在系统后台轻松创建通知，并灵活配置通知的内容、展示时间、网站生效范围等参数。\n\n这个项目复杂度并不高，但是对于第一次实习的我来说，还是一个比较具有挑战性的任务，因为在此之前只是跟着教程写代码，并没有发挥出自己的自主性，因此刚开始做的比较慢，效果也并不好，不过好在我的导师给了我很大的帮助，告诉我需求文档与设计文档要怎么写，如何做需求排期、风险管理等。鱼皮哥也没有给我很大的时间上的压力，放手让我去做。通过一次次的迭代终于可以达到验收的水准了，说实话我当时成就感还是比较大的，这是我 **第一次负责独立项目，并且从 0 - 1 完成。** 完成后我又写了详细的项目总结文档，复盘我遇到的问题，给大家分享一下我学到的知识点：\n\n1）IDEA 多环境的配置，区分线下和线上配置\n\n2）团队开发流程与规范 ：每一步都必须要写好文档，包括需求分析文档、调研文档、技术选型文档（技术调研）、详细设计文档，**一定要理清核心业务，再进行开发** 。\n\n3）代码复用能力，复用公司的前后端模板，快速进行二次开发\n\n4）Mac 快捷键的学习，形成自己的工作流 （这个是松柏教我的，省下的时间可以适当摸鱼 \uD83D\uDC1F）\n\n5）MyBatis-plus 分页插件使用（前后端的对接）\n\n6）如何解决前端传入的数据与后端需要接收的数据不匹配的问题（JSON处理）\n\n7）阅读官方文档的能力：解决修改列表渲染样式、表单字段渲染样式、是否展示属性配置等，还要熟悉 Ant Design 的常用组件。\n\n8）学会开发一个优秀的前端 SDK（JS 脚本）。包括定位打包后 JS 文件过大的原因、使用原生 JS 开发弹窗代替依赖库来写一个弹窗样式、用 Fetch 代替 Axios 写请求接口等。这些操作可以大大减小压缩文件的体积，方便用户引入，减少消耗的资源。\n\n9）腾讯云对象存储的安全使用\n\n\n\n#### 3、负责独立项目\n\n鱼皮之后又给我安排了一个独立的项目 —— 企业级周边系统，这次的项目难度以及工作体量相较于动态公告系统是要上一个等级的，所以我说鱼厂的培养制度是循序渐进的并非无道理。\n\n还是简单介绍一下这个项目背景，在我们过去的周边信息管理中，存在着对内（公司内部周边管理）和对外（向用户展示周边信息）两个独立的表单。这种模式导致了大量信息的重复填写，同时也增加了人工维护的成本和压力。为了解决这一问题，我们迎来了周边系统的诞生。这一次相比我第一次开发， 我觉得最明显的进步在于更熟悉开发流程与规范了，比如我会自主进行需求的排期，文档的沉淀，并且一些重复性的 CRUD 代码也更加熟练了，不需要花很多时间就能完成，可以把时间重点放在思考核心业务的设计上，并且将想法和同事反馈，可以帮助我辅助思路以及设计的可行性。\n\n> 地址：http://prize.yuyuanweb.com/\n\n![](https://pic.yupi.icu/1/image-20240409151145088.png)\n\n值得一提的，**我的导师会认真看我写的设计文档，并给出详细的改进建议**，在此之前我一直认为设计数据库是比较复杂的，现在虽然不能说得心应手，也积累了一些自己的经验，能对付一些常见的系统设计了。\n\n如果说前一个项目我更的是在学习开发的知识的话，这一个项目可以帮助我巩固熟悉开发流程，之后可以很快地开发一个类似的系统，并且真实的感受到企业中一步一步优化项目的过程。并且最后鱼皮给了我一台单独的服务器，学会了部署上线的方法。第一次部署的时候还不太熟，好在 CQ 给我讲了 Nginx 的反向代理的，并且我也沉淀了详细的部署文档，之后再部署的时候可以控制在小时级别内了。之后说不定各位鱼友就能用上我们的周边系统挑选周边了~\n\n\n\n#### 4、撰写技术文档\n\n年后，鱼皮给我安排了撰写项目教程的任务，让我完成我负责的两个项目详细教程的编写，手把手教我如何写教程文章，写好文章大纲、保证语言的通俗易懂，如果是规范的教程，可以参考鱼皮哥在星球分享的 [代码生成器共享平台](https://mp.weixin.qq.com/s?__biz=MzI1NDczNTAwMA==&mid=2247557397&idx=1&sn=2bfd82f22ddb118c0f77f34e7cb05593&scene=21#wechat_redirect) 教程，可以说我没有见过比这更细文字版的教程了。\n\n写第一个项目的教程的时候还不是很熟悉，有一些写作格式与规范还不太了解，以及部分内容过于机械化，鱼皮哥会详细看我的教程，并给出优化的建议，应该怎么引导读者、怎么拆分内容、如何写地更加专业规范等，让我在写第二个项目教程的时候更加熟练且得心应手了。\n\n![](https://pic.yupi.icu/1285/image-20240409103914096.png)\n\n总的来说，这个阶段我可以很明显感觉到自己写作能力的进步，有了框架后，写作思路更加清晰了。\n\n\n\n#### 5、开发 IDEA 插件\n\n再之后，我们公司研发上线了代码小抄：一个易用的代码分享工具，支持快速跨设备分享代码、阅读他人代码、在线运行代码、AI 分析和代码纠错等功能。\n\n> 代码小抄：https://www.codecopy.cn/\n\n而我也接到了一个新的需求，开发代码小抄的 IDEA 插件，其实当时鱼皮在 B 站上发布了视频介绍代码小抄，下面评论区有一个 “产品经理” 提出了开发一个插件的需求，我就知道事情并不简单！鱼皮一定是看到了他的评论决定给我这个需求的 \uD83D\uDE2D。\n\n> 鱼皮：其实并不是，很早之前就计划好了！\uD83D\uDC36\n\n这对于我来说，也是一个不小的挑战，因为我之前在网上调研过 IDEA 插件的开发教程，可以说是少的可怜，要么就是非常入门没有深度，要么就是过时的教程不适合新版本 IDEA，所以光是调研教程，学习 IDEA 插件开发，跑通 Demo，我就花了两三天的时间，因为项目用的是 Gradle 依赖管理工具，我对这个东西不是很熟，刚开始一直拉取依赖失败，配了很久的环境，一直跑不起来，好在之后配置了本地的 Gradle，开了代理之后终于能安装上依赖了。\n\n按照惯例，还是介绍这个项目：这款插件是专为代码小抄项目设计的，开发同学可以直接在 IntelliJ IDEA 开发工具中一键分享代码到代码小抄，并快速获取分享链接，然后就可以把代码转发给更多人啦~\n\n在开发过程中还是学到了很多知识的，比如插件的开发步骤、重要的模块、扫码登录的开发、如何在 IDEA 插件中种上 Cookie 等。\n\n\n\n#### 6、开发云端管理平台\n\n再之后，我们公司自研的超级剪切板工具 - 剪切助手也进入内测了，这是一个界面精美、简单易用、支持快速复制多条内容并自由粘贴的效率工具。\n\n> 官网：https://jianqiezhushou.com/\n\n![](https://pic.yupi.icu/1/1712632997742-76c75db3-5636-4709-88fd-47f0fb688034.png)\n\n\n\n我虽然没有直接参与项目业务的开发，但是也做了一些贡献，开发了剪切助手云端管理平台，支持用户云端管理自己的剪切内容。\n\n在这个项目中，我学到了很多前端开发的技术，比如怎么实现一个带格式化的复制功能（我们使用 Render 函数后，渲染出来的内容无法直接使用表格组件自带的 Copyable 复制）、集成富文本编辑器（更好地展示用户复制帖子的内容）、在前端实现微信二维码登录等。同时也学到了一些 CSS 技巧，比如当我们需要修改两个地方用到一个组件的样式应该怎么做。\n\n阿星教我了一个开发技巧，给每一个页面都要写一个 CSS Class 类名，找到包裹这两块不同的类名给他复制下来，然后通过唯一的类名进行修改对应其下的元素样式即可。\n\n\n\n---\n\n\n\n以上呢，就是我近三个月的实习工作。我个人认为这种方式是很能锻炼一个实习生的，能很明显感受自己的技术成长。\n\n也分享一下我之前的简历。\n\n全栈实习生简历：https://www.laoyujianli.com/share/yupi3\n\n\n\n## 软实力成长\n\n1）养成独立解决问题的习惯\n\n我觉得这一点是对我帮助最大的，作为新人，**遇到问题时首先去尝试思考，独立解决**，是非常重要的。\n\n\n\n2）学会提问的智慧\n\n这也是鱼皮哥在星球置顶帖中提到的，我们在问别人问题的时候需要尽量描述清楚自己的问题，自己尝试的方案，失败的原因等，才能让别人更好的帮助你解答问题。\n\n\n\n3）提升自己的表达能力\n\n这一点是承接上文的，不管是与人交流，还是写文章，都需要展现出自己的表达能力。其实我的表达能力并不好，中学的时候作文也只是及格水平，没有那么出彩。需要通过多说，多写来锻炼自己。\n\n\n\n4）提高自己的总结复盘能力\n\n这一点我觉得我已经养成了习惯，至少现在在做完一个项目，或者看完一门教程，我都会产出一篇文档来专门做总结，做完一件事也会复盘自己做的好的或者不好的地方，方便自己下一次改进，做得更好。还有就是公司会写周报，把自己日常做的事记录下来，开会的时候一起讨论进度，也能锻炼自己这方面的能力。\n\n\n\n5）和同事一起吃饭\n\n融洽的同事关系，能够让工作起来更加舒服和高效，在吃饭的时候，通过和同事的交流，也能获得一些自己平时无法得到的信息，提高自己的认知。特别是在和一些比你更厉害的牛人交流的时候，你能收获到的会更多。\n\n\n\n6）及时记录灵感\n\n每个阶段的学习方法是会改变的，随着知识的积累。比如一开始学习写代码只是模仿，到后面就可以自己根据设计参考文档写出代码。**对于一些知识点，需要自己能讲出来才算是真正的理解。**\n\n\n\n## 业务提升\n\n聊聊我来上海的生活吧，我是一个美食爱好者，梦想是吃遍全中国所有爱吃的食物，且我也喜欢旅行，来上海去游玩了一些比较出名的网红打卡点，像外滩、东方明珠塔、武康大楼、豫园等景点还是非常值得一去的。平时的爱好就是在公寓里和朋友一块玩金铲铲，并自创了一个金铲铲滴牌理论（当单局内刷新次数大于 80 次的时候常客优惠会比棱彩门票更有价值），在大家都有空的时候会一块聚在公司打桌游。\n\n项目方面，补了之前搁置的鱼皮 API 开放平台项目，了解到分布式 RPC 框架的使用，以及微服务网关 Spring Cloud Gateway 的知识。我还把智能 BI 项目拉下来回顾，重新复习了一遍消息队列的知识，因为我个人很喜欢这个 AIGC 项目，并且感觉可以做的事情非常多，打算对这个项目进行持续的扩展，后面也会不定期更新项目拓展笔记，感兴趣的同学可以看一看我的源码：http://gitlab.code-nav.cn/szdaiyifei/bi 。\n\n目前正在读的是鱼皮的手写 RPC 框架教程，已经完成了前六章的代码编写，不过还是有一些难度的，毕竟 RPC 用的还不够熟练，就要自己写一个轮子。像自定义的 SPI 机制还是比较复杂的，只能多读几遍来帮助自己更好地理解。\n\n![](https://pic.yupi.icu/1285/image-20240409104539107.png)\n\n\n\n技术方面，我打算认真系统学习设计模式，学习到前人总结出来的开发规范，目标是能写出更优雅可复用的代码。计划先把《大话设计模式》通读一遍，再去尝试手写简单的设计模式，最后把它们应用到项目里。比如 [编程导航](https://mp.weixin.qq.com/s/AjD2dKA5br0htPo1iqzkBQ) 的聚合搜索和 OJ 都用到了大量设计模式，之后可以在项目中实践。还有数据结构与算法的学习，我要日拱一卒，计划阅读《数据结构之美》这份专栏，听说写的十分不错，搭配着刷 Leecode 热门题集。\n\n阅读方面，最近比较喜欢读一些哲学类的书籍，以及一些提升自己软实力的书，像耗子叔的左耳听风专栏绝对是经典中的经典。我会利用碎片化的时间，比如等车、通勤、下班回租房的路上等时间来看编程导航内大家分享的文章，并且在能力范围内帮助大家解答问题。\n\n\n\n## 未来展望\n\n虽然我的实习生活结束了，但生活还在继续。计划是回学校认真准备考研了，因为自己的第一学历是双非本科，在学历这方面是没有什么竞争力的，我觉得机会摆在我面前，我要去珍惜，去努力尝试一下，享受这个过程，并且我觉得我的 408 基础学科学的不是很扎实，借此机会巩固一下自己的专业基础能力。\n\n当然更久远的计划还是能继续提高我的技术水平，多做一些项目，并且在博客网站分享一些自己的技术文章，目标是能在互联网这一块找到自己的一席之地吧！\n\n最后，真的非常感谢阅读，祝好！❤️\n\n![](https://pic.yupi.icu/1285/FnwBM9gKsh_V5iz5ZeWVimc0CmY5.png)\n\n\n\n---\n\n\n\n以上，就是我们实习生同学的分享啦，希望对大家有帮助。\n\n\n\n",
        "category": "文章",
        "cover": null,
        "language": null,
        "externalLink": null,
        "shortLink": null,
        "componentName": null,
        "viewNum": 50,
        "thumbNum": 5,
        "favourNum": 2,
        "commentNum": 1,
        "priority": 0,
        "userId": "1601072287388278786",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2024-04-28 19:40:14",
        "updateTime": "2024-05-05 12:48:32",
        "user": {
          "id": "1601072287388278786",
          "planetCode": "1",
          "userName": "程序员鱼皮",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1601072287388278786/9vqTr3HM-WechatIMG1287.jpeg",
          "gender": 1,
          "userProfile": "这个网站的老大",
          "userRole": "admin",
          "interests": [
            "C++",
            "Java",
            "Python",
            "算法"
          ],
          "place": "上海",
          "birthday": "1998-11-03",
          "school": "东华大学",
          "major": "网络工程",
          "education": null,
          "graduationYear": 2020,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": 2,
          "direction": "后端",
          "goal": null,
          "github": "https://github.com/liyupi",
          "blog": "https://yupi.icu",
          "score": 3085,
          "coin": 170,
          "followeeNum": 1500,
          "followNum": 6,
          "followStatus": null,
          "vipExpireTime": "2287-05-20 01:46:39",
          "lastLoginTime": null,
          "createTime": "2022-12-09 12:32:33",
          "updateTime": "2024-05-03 03:15:29"
        },
        "tags": [
          "文章",
          "实习"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1783039605524660226",
        "title": "奇安信的年终奖，出乎了所有人意料！（给目标进大厂同学的建议）",
        "description": null,
        "content": "大家好，我是程序员鱼皮。\n\n来吃个瓜，昨天看到了这么一条热搜消息，号称网安一哥的大厂奇安信官宣 “全员无年终奖”！\n\n![](https://pic.yupi.icu/1/2ebe2624f1dabfc9ddcf1ce15fd2d968.jpeg)\n\n不知道这算不算刷新了大厂的记录，上有王者荣耀团队百月年终，下有网安大厂全员无年终。同样是在大厂打工，薪资差距真的也可以有天壤之别！\n\n说实在的，如果我是奇安信的员工，想必也是愤怒到极点了吧，希望大厂都能振作起来，让国内的环境回暖一些。\n\n说到这里，其实我也想做个小调研，对于刚毕业的同学来说，你会更倾向于选择薪资更高的小公司，还是规模更大、技术更先进的大公司呢？\n\n（放投票）\n\n如果让鱼皮来选择，刚毕业的时候可能还是会进大厂吧。虽然我自己也在创业开小公司，但很多其他小公司的技术同学就是在打杂，能学到的东西可能是有限的。\n\n前段时间我收到 [编程导航](https://mp.weixin.qq.com/s/AjD2dKA5br0htPo1iqzkBQ) 一位同学的提问，这位同学目标就非常坚定： **我就是要进国内大厂，非大厂不进！**\n\n针对这种情况，下面鱼皮给同学们一些学习建议，可供参考。\n\n\n\n## 鱼友提问\n\n先简单介绍下这位同学的情况：\n\n1）技术栈（Java 后端方向）：\n\n- 计算机基础： 有算法基础，力扣做了 300 题左右，网络、操作系统、数据库本科学过，不够深入且不知道如何深入需要到什么程度才有掌控感。语言基础：JVM 刚开始。设计基础：主要通过阅读源码进行设计能力的提升，源码刚开始。\n- 项目和框架：到 SpringBoot 做过两个前后端的项目（前端用 vue，后端 springboot），springcloud 在学习中。但是感觉没有看到太多应用场景，没有很找到学习这个技术的需求，所以有点迷茫。\n\n2）实习经历：一个小厂后端 + 一个百强企业 AI 方向实习\n\n3）具体需求：\n\n- 参加秋招，冲击国内大厂，且只要大厂！\n- 计算机基础感觉掌握地并不牢固，想知道怎么提升这一块？\n- 语言 JVM 以及设计源码的这些核心内功，不知道怎么深入学习？\n\n取其上者得其中，我想得到一个比较高的标准和策略，一定严格执行。每天差不多能拿出 4 - 5 个小时左右的时间来学习，周末和假期可以 10 个小时以上学习。假期比较多，可以塞满。\n\n\n\n## 鱼皮回答\n\n这个问题非常大，但也非常好，针对学历还不错（一本及以上）、想进大厂且只进大厂的同学，我可以给出如下建议。\n\n> 学历一般的同学，我的建议是不要把自己局限于某规模的公司，还是尽量多投递、多争取机会再做选择。\n\n\n\n#### 1、进大厂的门槛：简历\n\n简历是进大厂的基础关和门槛，简历上的核心内容就是专业技能、项目和其他经历。\n\n专业技能大家写得都差不多，只要认真按照 [编程导航](https://mp.weixin.qq.com/s/AjD2dKA5br0htPo1iqzkBQ) 的 [写简历技巧文档](https://bcdh.yuque.com/staff-wpxfif/resource/yvtiza4dmgumk3dt) 优化即可，不必多说。\n\n实习经历和项目经历是进大厂的关键，这位同学已经有 2 段实习经历，只要表达清楚每段实习的工作和关键成果、能和求职的目标岗位（Java 后端）有一定关联就足够了。\n\n最能发挥的还是项目经历，尤其是要自己做项目，必须要在跟编程导航或者网上的教程完成项目的前提下，做一些换皮和扩展，拉开区分度。\n\n比如看看优秀鱼友对鱼皮智能 BI 项目的扩展，增加了很多有意思的新功能：\n\n![](https://pic.yupi.icu/1/output%20(4).png)\n\n如果想稳进大厂，可以有这样一个策略：拿自己的简历去对标工作 1 - 3 年经验的简历，如果感觉项目经历差不多，那么希望很大。\n\n\n\n#### 2、进大厂的关键：项目经验和系统设计能力\n\n大厂需要的是有能力应对挑战的高手。所以一般在大厂面试中，都会有场景类、系统设计类的问题，比如让你设计一个实时弹幕系统，这些问题能够看出候选人的能力上限。水平差的人可能只知道用数据库存弹幕，高手则能够利用 Redis 等各种中间件、从前端到后端设计出一整套高性能的系统。这个时候，你到底是背书的、还是真正有经验的，一问便知，所以只靠背八股文是不行的。\n\n所以如何提高自己的上限？接下来的时间应该投入在哪里呢？\n\n首先在技术学习上，大厂必备的后端技能一样不能拉下，优先把我的 [Java 后端学习路线](https://mp.weixin.qq.com/s?__biz=MzI1NDczNTAwMA==&mid=2247559154&idx=1&sn=8c12b037854cb347f383abf1f0a3ea71&chksm=e9c30005deb4891346cafa4bdb30e47172f0cb9f8afea22e6a137731bd9825f01d6e6b136653&token=909345065&lang=zh_CN#rd) 第四阶段技能全部学完，并且重点是：**一定要运用到项目中，加深理解。**\n\n我不是很建议 “通过阅读源码提升设计能力”，因为在你自身项目经验并不丰富、编码能力并不强的时候（比如还不会运用设计模式到项目中），看源码的性价比很低。一方面是效率低，另一方面是不容易吸收，毕竟 “看懂代码” 和 “能自己写出来” 还是有很大的鸿沟的。\n\n所以我建议还不能熟练根据需求设计方案和完成项目的同学，优先把 80% 以上的时间投入到项目上。按照 [鱼皮项目学习建议](https://yuyuanweb.feishu.cn/wiki/Q4AdwjLDWiLZy0kAjHqcQinon8N) 中的顺序，把几个项目的后端学完、自己写出代码并上线（先只做后端，前端可完全跳过）。\n\n![鱼皮项目学习建议](https://pic.yupi.icu/1/image-20240411131942324.png)\n\n不要觉得自己之前已经有项目经验就不看了，如果你真的很熟悉某些技术的运用，那么可以快进或者跳着看。时间紧急的话，甚至可以只看需求分析部分，能自主设计出方案即可，代码都不用写了，从而快速锻炼自己的系统设计能力。\n\n对于这位同学，每天平均投入 6 个小时、再加上之前有做过项目的前提下，一个月内应该可以完成 5  - 6 个项目，这是针对目标只进大厂的高要求，其他同学不必对此感到有压力。\n\n当你认为自己已经能够熟练运用大多数技术来设计实现方案的时候，再去阅读源码，你学到的就不只是 “背八股文、背了一套解决方案”，而是能和自己之前的项目经验融会贯通，真正理解前人设计的精妙之处。\n\n所有新技术的学习都可以遵循 [我的技术学习建议路线](https://bcdh.yuque.com/staff-wpxfif/resource/nxkhhu) ，找到工作前大多数技术能够做到第 4 阶段（主动运用），有 1 - 2 个技术达到第 5 - 6 阶段（了解原理和深入源码）就已经非常优秀了。\n\n![](https://pic.yupi.icu/1/image-20240411132144690.png)\n\n\n\n#### 3、进大厂的及格线：基本功\n\n想进大厂，必须要有足够高的上限，当然，下限也不能太低。计算机基础和八股文之类的基本功，就是进大厂的下限，是必须要准备的。\n\n除了做项目之外，建议剩下 20% 的时间每天坚持背八股文、继续刷算法。\n\n对于学习计算机网络和操作系统，如果你之前完全没学过相关的课程，只需要背八股文就可以了；尤其对于学习能力强的同学，不需要系统看教程（尤其是像什么黑皮书之类的），比较费时间、性价比不高，因为八股文无非就那些题目，全都能理解透了也能掌握个 70 - 80%，足够应付面试。\n\n> 当然，如果你现在才大一大二，时间丰富，有空多去看看计算机基础的系统教程，肯定更加分。\n\n背八股文的过程中必须要做的一件事：整理自己的八股文手册。对题目进行分类整理，并且每道题目在别人答案的基础上，给出自己的思考和答案，这样印象会更深刻，整体效率也会更高。\n\n做每日计划这点就不多说了，建议大家平时多阅读网上程序员相关的文章，提升自己的软技能也很重要。\n\n\n\n",
        "category": "文章",
        "cover": null,
        "language": null,
        "externalLink": null,
        "shortLink": null,
        "componentName": null,
        "viewNum": 77,
        "thumbNum": 4,
        "favourNum": 1,
        "commentNum": 0,
        "priority": 0,
        "userId": "1601072287388278786",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2024-04-24 15:45:43",
        "updateTime": "2024-05-05 14:55:38",
        "user": {
          "id": "1601072287388278786",
          "planetCode": "1",
          "userName": "程序员鱼皮",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1601072287388278786/9vqTr3HM-WechatIMG1287.jpeg",
          "gender": 1,
          "userProfile": "这个网站的老大",
          "userRole": "admin",
          "interests": [
            "C++",
            "Java",
            "Python",
            "算法"
          ],
          "place": "上海",
          "birthday": "1998-11-03",
          "school": "东华大学",
          "major": "网络工程",
          "education": null,
          "graduationYear": 2020,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": 2,
          "direction": "后端",
          "goal": null,
          "github": "https://github.com/liyupi",
          "blog": "https://yupi.icu",
          "score": 3085,
          "coin": 170,
          "followeeNum": 1500,
          "followNum": 6,
          "followStatus": null,
          "vipExpireTime": "2287-05-20 01:46:39",
          "lastLoginTime": null,
          "createTime": "2022-12-09 12:32:33",
          "updateTime": "2024-05-03 03:15:29"
        },
        "tags": [
          "文章",
          "求职",
          "学习建议"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1782694682812219393",
        "title": "我们做的小工具上线啦！（剪切助手上线）",
        "description": null,
        "content": "大家好，我是程序员鱼皮。\n\n好消息，好消息，我们的新产品又又又又上线啦！\n\n这次，我们做的是一款桌面端软件，号称 “颜值天花板” 的超级剪切板工具 `《剪切助手》`。\n\n> 官网下载：[https://jianqiezhushou.com](https://jianqiezhushou.com/)\n\n![](https://pic.yupi.icu/1/1713409268242-4c2f1edd-7d80-4d04-8f05-0a553f3ee12a.png)\n\n\n\n这也是我第一次正式发布桌面端软件。老实说，我们从去年就开始规划这个产品了，过程中踩了很多坑，快把我们团队开发折磨秃了。。。\n\n\n\n## 为什么做这个项目？\n\n首先肯定是从我自己的需求出发了，作为一名程序员和知识创作者，在我写文章和代码时，需要频繁地复制和粘贴多段内容，比如把不同文件的部分代码统一粘贴到文章内。\n\n但无奈的是，系统默认只支持粘贴最近一次复制的内容，如果想找到之前已经复制的内容并再次粘贴，就很麻烦，只能再去复制一次。\n\n![](https://pic.yupi.icu/1/1713416385991-eb2223b9-88cc-4342-b871-0f957c2ad8d0.gif)\n\n我们团队的运营同学也有类似的烦恼：在回复用户时，往往要频繁回复同样的话术；每次回复时，都需要从备忘录里找到对应的内容，再来回地复制粘贴。\n\n![](https://pic.yupi.icu/1/1713417097466-d12e4309-1f96-4915-8f92-92fdb682d464.gif)\n\n有没有办法提高我们的工作效率呢？\n\n答案：选用一个能力更强的剪切板工具。\n\n\n\n其实很早之前我就有用过一些剪切板工具，也调研了近十个剪切板工具，无奈它们都无法满足我的需求。\n\n比如有的剪切板工具不支持搜索：\n\n![](https://pic.yupi.icu/1/1712630529534-e9b3ae7f-fdc2-4a96-9e3a-35bbe3bf4705.png)\n\n\n\n有的剪切板工具只能复制纯文本，甚至不支持保存文件的复制记录：\n\n![](https://pic.yupi.icu/1/1712632112480-4ef3d96a-30ad-4451-b458-d065b4a8d099.png)\n\n\n\n而且他们的界面大多都不够优雅，比如这样：\n\n![](https://pic.yupi.icu/1/1713410231149-602d7673-1971-4a42-8ecc-9c85893b6073.png)\n\n\n\n我相信尤其是对于程序员朋友们，应该非常追求软件的美观炫酷吧。\n\n此外，我发现大多数剪切板工具都是 **本地的**。自己在某台电脑上复制的内容无法同步到其他的设备。一旦更换了设备，之前已复制的内容便全部丢失了！\n\n当然，也有一些相对好用的剪切板工具，但几乎都是收费的。。。\n\n于是，我们决定自己出手了！ **剪切助手，启动！**\n\n\n\n## 什么是剪切助手？\n\n剪切助手是一款界面精美、简单易用、跨设备同步、功能丰富的超级剪切板工具，目标是帮助大家大幅提高工作效率。\n\n> 官网下载：[https://jianqiezhushou.com](https://jianqiezhushou.com/)\n\n![](https://pic.yupi.icu/1/1713411132983-066edaac-17e1-4aeb-902f-a0d0bc2e2a75.png)\n\n\n\n产品支持 Windows 和 Mac 双系统，且核心功能 **完全免费**！不就是白票嘛，拿去拿去~\n\n![](https://pic.yupi.icu/1/1713410772603-7e592934-bc29-49ac-a91f-7c7520d58584.png)\n\n\n\n下面只用一分钟，带大家快速掌握这款提高效率神器的用法（文末还有福利哦 \uD83C\uDF81）！\n\n\n\n### 一、颜值天花板\n\n我们精心设计了剪切助手的 UI 界面，可以说是同类软件中的颜值天花板，就是这么自信~\n\n咱就是说，光是看这个 Logo，就让我想起了一位故人。。\n\n![](https://pic.yupi.icu/1/1712573250998-5f2b3ede-30dc-4baa-b1cd-62ef2ddc7cd7.png)\n\n\n\n剪切助手支持横向布局和纵向布局，可以自由切换，灵活地展示已复制的内容：\n\n![](https://pic.yupi.icu/1/1712632997742-76c75db3-5636-4709-88fd-47f0fb688034-20240418132647846.png)\n\n![](https://pic.yupi.icu/1/1712575500228-ef068c26-a873-4957-b734-fafb36a580e9.png)\n\n\n\n同时剪切助手提供了深色模式和浅色模式，可以根据自己的需要切换主题：\n\n![](https://pic.yupi.icu/1/1712575739455-862a167e-4280-4d9d-a396-364ff0cb66fd.png)\n\n\n\n### 二、高效搜索粘贴\n\n剪切助手非常简单易用，只需要正常地按 `Ctrl + C` 进行复制，然后按快捷键（默认是 `Ctrl + O`）就可以唤起已复制内容面板。\n\n无需使用鼠标，通过按键就可以自由搜索和选择内容进行粘贴：\n\n![](https://pic.yupi.icu/1/1712643297334-792ddd3d-cabe-4e30-8f89-0cfd67c7f248.png)\n\n\n\n还可以对内容进行分组，便于快速筛选，比如鱼皮将常用的代码片段分到了一组：\n\n![](https://pic.yupi.icu/1/1713415283996-519e13e9-b867-4f9a-b74f-7e7f8937c348.png)\n\n\n\n利用分组功能，你完全可以把剪切助手当做一个备忘录来使用，将自己要做的事情拖入指定分组，一目了然：\n\n![](https://pic.yupi.icu/1/1713417204516-b434ed8f-ccce-4c4f-94a2-97419ab8b691.png)\n\n\n\n还有更高效的用法！只需按 `Ctrl + 数字键`，就可以按顺序粘贴最新复制的几个内容，图片和文件等内容也可以快速粘贴到文件夹中~\n\n![](https://pic.yupi.icu/1/1712814806558-0d9c7546-bcc6-4897-a072-35275bb69a15.gif)\n\n\n\n### 三、自定义快捷键\n\n剪切助手还支持自定义快捷键，实现快速切换分组、粘贴最近复制的内容。\n\n甚至还支持给指定内容设置快捷键，可以一键粘贴自己最常用的内容：\n\n![](https://pic.yupi.icu/1/1712576413168-7e2614bb-e180-4cec-b442-46dbfff5f31a.png)\n\n\n\n运营同学可以利用这个功能，给一些高频回复的话术设置快捷键。在需要回复时，按下对应的快捷键即可，不用再去翻备忘录了！\n\n\n\n### 四、极速分享内容\n\n这是其他市面上的剪切板工具没有的创新功能，可以一键分享自己复制的内容。\n\n例如我要分享一个有趣的字符画，只需要右键单击内容，就会得到一个分享链接：\n\n> 比如：http://web.jianqiezhushou.com/post/348983238094074\n\n![](https://pic.yupi.icu/1/1712576116576-c34dfd98-19ce-40b7-b25b-4c2f13fd41c6.png)\n\n\n\n然后自己和其他小伙伴就可以在任意设备上查看分享的内容，如下图：\n\n![](https://pic.yupi.icu/1/1713416065657-0adddd2c-242c-47ad-8929-83c7f65ce45a.png)\n\n\n\n所以完全可以把剪切助手当做一个信息同步的小工具，比如把自己电脑上复制的代码分享到手机上查看等~\n\n\n\n### 五、跨设备云同步\n\n剪切助手提供了云同步功能，支持多台设备共享复制内容。\n\n比如你在 Windows 电脑上复制的内容，想换到一台 Mac 新电脑，只需要点击同步按钮，就能无缝切换、快速完成同步备份，数据不会丢失！\n\n![](https://pic.yupi.icu/1/1712576546395-c47fb4ee-98fd-45ff-b0bd-3fa42dc3a1d9.png)\n\n云同步默认不会开启，所以大家完全不用担心隐私问题。\n\n\n\n### 其它功能\n\n除了上述核心功能，我们还提供了很多比较细节的功能。\n\n比如：**自动识别复制的内容类别**\n\n如果复制的内容是链接，会展示网页标题和 logo，并且右键单击就能直接在浏览器中打开：\n\n![](https://pic.yupi.icu/1/1713416598726-d857bbd7-84b4-4148-9ad3-225412926af6.png)\n\n\n\n如果复制的是图片和文件，会展示占用的空间大小；复制的是文本，将展示字数等。\n\n![](https://pic.yupi.icu/1/1713416668587-36a5c786-870c-4525-9640-cd5c42088887.png)\n\n\n\n### 欢迎免费使用\n\nOK 就介绍到这里，欢迎大家使用剪切助手：[https://jianqiezhushou.com](",
        "category": "文章",
        "cover": null,
        "language": null,
        "externalLink": null,
        "shortLink": null,
        "componentName": null,
        "viewNum": 65,
        "thumbNum": 3,
        "favourNum": 1,
        "commentNum": 0,
        "priority": 0,
        "userId": "1601072287388278786",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2024-04-23 16:55:07",
        "updateTime": "2024-05-03 20:08:16",
        "user": {
          "id": "1601072287388278786",
          "planetCode": "1",
          "userName": "程序员鱼皮",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1601072287388278786/9vqTr3HM-WechatIMG1287.jpeg",
          "gender": 1,
          "userProfile": "这个网站的老大",
          "userRole": "admin",
          "interests": [
            "C++",
            "Java",
            "Python",
            "算法"
          ],
          "place": "上海",
          "birthday": "1998-11-03",
          "school": "东华大学",
          "major": "网络工程",
          "education": null,
          "graduationYear": 2020,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": 2,
          "direction": "后端",
          "goal": null,
          "github": "https://github.com/liyupi",
          "blog": "https://yupi.icu",
          "score": 3085,
          "coin": 170,
          "followeeNum": 1500,
          "followNum": 6,
          "followStatus": null,
          "vipExpireTime": "2287-05-20 01:46:39",
          "lastLoginTime": null,
          "createTime": "2022-12-09 12:32:33",
          "updateTime": "2024-05-03 03:15:29"
        },
        "tags": [
          "文章",
          "产品"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1782602505440485378",
        "title": "状态机概念以及使用",
        "description": "状态机概念以及使用",
        "content": "### 状态机的组成\n\n状态机是一种抽象的数学模型，描述了对象或系统在特定时间点可能处于的各种状态以及状态之间的转换规则。它由一组状态、事件、转移和动作组成，用于模拟对象在不同条件下的行为和状态变化。\n\n<img src=\"https://markdown-piggo.oss-cn-guangzhou.aliyuncs.com/img/image-20240423094124100.png\" alt=\"image-20240423094124100\" style=\"zoom: 33%;\" />\n\n状态机包括以下基本组成部分：\n\n- 状态（State）：表示对象或系统当前的状态，例如开、关、就绪等。\n- 事件（Event）：触发状态转换的动作或条件，例如按钮点击、消息到达等。\n- 转移（Transition）：定义了从一个状态到另一个状态的转换规则，通常与特定事件相关联。\n- 动作（Action）：在状态转换过程中执行的操作或行为，例如更新状态、记录日志等。\n\n状态机，也就是 State Machine ，不是指一台实际机器，而是指一个数学模型。说白了，一般就是指一张状态转换图。例如，根据自动门的运行规则，我们可以抽象出下面这么一个图。\n\n![image-20240423095540911](https://markdown-piggo.oss-cn-guangzhou.aliyuncs.com/img/image-20240423095540911.png)\n\n### 简单实现\n\n在计算机中，状态机通常用编程语言来实现。在 C、C++、Java、Python 等编程语言中，可以通过使用 switch-case 语句、if-else 语句、状态转移表等来实现状态机。在下面还有更加优雅的方式，使用 Spring 状态机 来实现。\n\n\n\n#### if-else 实现状态机\n\n在上面的示例中，我们使用 `if-else` 结构根据当前活动来控制音乐的播放状态，并执行相应的行为。代码如下：\n\n```java\npublic class BasketballMusicStateMachineUsingIfElse {\n    private boolean isPlayingMusic;\n\n    public BasketballMusicStateMachineUsingIfElse() {\n        this.isPlayingMusic = false; // 初始状态为音乐未播放\n    }\n\n    public void playMusic() {\n        if (!isPlayingMusic) {\n            System.out.println(\"Music starts playing...\");\n            isPlayingMusic = true;\n        }\n    }\n\n    public void stopMusic() {\n        if (isPlayingMusic) {\n            System.out.println(\"Music stops playing...\");\n            isPlayingMusic = false;\n        }\n    }\n\n    public void performActivity(String activity) {\n        if (\"basketball\".equals(activity)) {\n            System.out.println(\"Music~\");\n            playMusic(); // 打篮球时播放音乐\n        } else if (\"sing_rap\".equals(activity)) {\n            System.out.println(\"哎哟你干嘛!\");\n            stopMusic(); // 唱跳Rap时停止音乐\n        } else {\n            System.out.println(\"Invalid activity!\");\n        }\n    }\n\n    public static void main(String[] args) {\n        BasketballMusicStateMachineUsingIfElse stateMachine = new BasketballMusicStateMachineUsingIfElse();\n\n        // 测试状态机\n        stateMachine.performActivity(\"basketball\"); // 打篮球，音乐开始播放\n        stateMachine.performActivity(\"sing_rap\"); // 唱跳Rap，音乐停止播放\n        stateMachine.performActivity(\"basketball\"); // 再次打篮球，音乐重新开始播放\n    }\n}\n```\n\n\n\n#### switch-case 实现状态机\n\n在这个示例中，我们使用 `switch-case` 结构根据不同的活动来控制音乐的播放状态，并执行相应的行为。代码如下：\n\n```java\npublic class BasketballMusicStateMachineUsingSwitchCase {\n    private boolean isPlayingMusic;\n\n    public BasketballMusicStateMachineUsingSwitchCase() {\n        this.isPlayingMusic = false; // 初始状态为音乐未播放\n    }\n\n    public void playMusic() {\n        if (!isPlayingMusic) {\n            System.out.println(\"Music starts playing...\");\n            isPlayingMusic = true;\n        }\n    }\n\n    public void stopMusic() {\n        if (isPlayingMusic) {\n            System.out.println(\"Music stops playing...\");\n            isPlayingMusic = false;\n        }\n    }\n\n    public void performActivity(String activity) {\n        switch (activity) {\n            case \"basketball\":\n                System.out.println(\"Music ~\");\n                playMusic(); // 打篮球时播放音乐\n                break;\n            case \"sing_rap\":\n                System.out.println(\"哎哟 你干嘛 ~\");\n                stopMusic(); // 唱跳Rap时停止音乐\n                break;\n            default:\n                System.out.println(\"Invalid activity!\");\n        }\n    }\n\n    public static void main(String[] args) {\n        BasketballMusicStateMachineUsingSwitchCase stateMachine = new BasketballMusicStateMachineUsingSwitchCase();\n\n        // 测试状态机\n        stateMachine.performActivity(\"basketball\"); // 打篮球，音乐开始播放\n        stateMachine.performActivity(\"sing_rap\"); // 唱跳Rap，音乐停止播放\n        stateMachine.performActivity(\"basketball\"); // 再次打篮球，音乐重新开始播放\n    }\n}\n\n```\n\n是不是感觉状态机其实经常在我们的日常使用中捏~，接下来带大家使用更优雅的状态机 Spring 状态机。\n\n<img src=\"https://markdown-piggo.oss-cn-guangzhou.aliyuncs.com/img/image-20240423100302874.png\" alt=\"image-20240423100302874\" style=\"zoom:50%;\" />\n\n\n\n#### 使用 Spring 状态机\n\n1）引入依赖\n\n```xml\n<dependency>\n    <groupId>org.springframework.statemachine</groupId>\n    <artifactId>spring-statemachine-core</artifactId>\n    <version>2.0.1.RELEASE</version>\n</dependency>\n```\n\n2）定义状态和事件的枚举\n\n代码如下：\n\n```java\npublic enum States {\n    IDLE,       // 空闲状态\n    PLAYING_BB, // 打篮球状态\n    SINGING     // 唱跳Rap状态\n}\npublic enum Event {\n    START_BB_MUSIC, // 开始播放篮球音乐事件\n    STOP_BB_MUSIC   // 停止篮球音乐事件\n}\n```\n\n3）配置状态机\n\n代码如下：\n\n```java\n@Configuration\n@EnableStateMachine\npublic class BasketballMusicStateMachineConfig extends EnumStateMachineConfigurerAdapter<States, Event> {\n\n    @Autowired\n    private BasketballMusicStateMachineEventListener eventListener;\n\n    @Override\n    public void configure(StateMachineConfigurationConfigurer<States, Event> config) throws Exception {\n        config\n            .withConfiguration()\n            .autoStartup(true)\n            .listener(eventListener); // 设置状态机事件监听器\n    }\n\n    @Override\n    public void configure(StateMachineStateConfigurer<States, Event> states) throws Exception {\n        states\n            .withStates()\n            .initial(States.IDLE)\n            .states(EnumSet.allOf(States.class));\n    }\n\n    @Override\n    public void configure(StateMachineTransitionConfigurer<States, Event> transitions) throws Exception {\n        transitions\n            .withExternal()\n            .source(States.IDLE).target(States.PLAYING_BB).event(Event.START_BB_MUSIC)\n            .and()\n            .withExternal()\n            .source(States.PLAYING_BB).target(States.SINGING).event(Event.STOP_BB_MUSIC)\n            .and()\n            .withExternal()\n            .source(States.SINGING).target(States.PLAYING_BB).event(Event.START_BB_MUSIC);\n    }\n}\n```\n\n4）定义状态机事件监听器\n\n代码如下：\n\n```java\n@Component\npublic class BasketballMusicStateMachineEventListener extends StateMachineListenerAdapter<States, Event> {\n\n    @Override\n    public void stateChanged(State<States, Event> from, State<States, Event> to) {\n        if (from.getId() == States.IDLE && to.getId() == States.PLAYING_BB) {\n            System.out.println(\"开始打篮球，music 起\");\n        } else if (from.getId() == States.PLAYING_BB && to.getId() == States.SINGING) {\n            System.out.println(\"唱跳，你干嘛\");\n        } else if (from.getId() == States.SINGING && to.getId() == States.PLAYING_BB) {\n            System.out.println(\"继续打篮球，music 继续\");\n        }\n    }\n}\n```\n\n5）编写单元测试\n\n```java\n@SpringBootTest\nclass ChatApplicationTests {\n    @Resource\n    private StateMachine<States, Event> stateMachine;\n\n    @Test\n    void contextLoads() {\n        //开始打球，music 起\n        stateMachine.sendEvent(Event.START_BB_MUSIC);\n\t\t//开始唱跳，你干嘛\n        stateMachine.sendEvent(Event.STOP_BB_MUSIC);\n\t\t//继续打球，music 继续\n        stateMachine.sendEvent(Event.START_BB_MUSIC);\n\n    }\n}\n```\n\n\n\n效果如下：\n\n![image-20240423103523546](https://markdown-piggo.oss-cn-guangzhou.aliyuncs.com/img/image-20240423103523546.png)\n\n\n\n在上面的示例中，我们定义了一个状态机，用于控制在打篮球时音乐的播放和唱跳 Rap 的行为。通过触发事件来执行状态转移，并通过事件监听器监听状态变化并执行相应的操作。\n\n![image-20240423103604502](https://markdown-piggo.oss-cn-guangzhou.aliyuncs.com/img/image-20240423103604502.png)",
        "category": "文章",
        "cover": null,
        "language": null,
        "externalLink": null,
        "shortLink": null,
        "componentName": null,
        "viewNum": 22,
        "thumbNum": 2,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1612254411675926529",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2024-04-23 10:48:51",
        "updateTime": "2024-05-01 01:41:25",
        "user": {
          "id": "1612254411675926529",
          "planetCode": "12852",
          "userName": "聪ζ",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1612254411675926529/JbN5T832-1.jpg",
          "gender": null,
          "userProfile": null,
          "userRole": "vip",
          "interests": [],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": "本科",
          "graduationYear": 2023,
          "jobStatus": "已工作",
          "company": null,
          "job": "后端",
          "workYear": null,
          "direction": "后端",
          "goal": null,
          "github": null,
          "blog": null,
          "score": 0,
          "coin": 0,
          "followeeNum": 3,
          "followNum": 0,
          "followStatus": null,
          "vipExpireTime": "2024-08-21 21:17:54",
          "lastLoginTime": null,
          "createTime": "2023-01-09 09:06:20",
          "updateTime": "2024-04-23 21:43:28"
        },
        "tags": [
          "文章"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1782596110213210113",
        "title": "偷偷分享下我们公司的研发规范~",
        "description": null,
        "content": "大家好，我是程序员鱼皮。前几天我分享了自己 [创业一周年的复盘总结](https://mp.weixin.qq.com/s/PLlTO3xq6eheDJKUu9j4IA) ，其中提到了一点：随着团队的扩大，我们会更注重研发规范和技术沉淀。\n\n有程序员朋友就问了：啥是研发规范？\n\n还有朋友表示：鱼皮别拿咱当外人，把你们公司的研发规范发来看看？\n\n![](https://pic.yupi.icu/1/image-20240419140208921.png)\n\n可以，必须安排！\n\n这篇文章就给大家简单分享下我们公司的研发规范，不过在开始前必须要明确 2 点：\n\n1. 每个团队都应该根据情况定制自己的研发规范，别人的规范仅供参考，未必最适合你们团队。\n2. 篇幅有限，本文仅分享一些我认为很重要的规范，并且移除了我们自己的敏感信息。\n\n\n\n## 一、项目整体研发流程\n\n1）团队共同确认目标和规划\n\n开会讨论，产出目标和规划文档\n\n2）产品调研和需求分析\n\n产出调研报告和需求分析文档\n\n3）需求评审\n\n开需求评审会，明确要做的需求和工作，评估工作量并明确工作时间节点。\n\n4）方案设计\n\n产出方案设计文档，比如数据库表设计、页面设计、接口设计等。\n\n5）研发\n\n包括各自开发、单元测试、前后端联调等\n\n6）测试和验收\n\n包括研发自测、产品验收、组内验收等\n\n7）代码提交\n\n提交可上线的代码，需要由负责人审查，通过后可合并\n\n8）部署上线\n\n将代码发布到服务器上，组内进行上线通知并更新上线文档，上线后需要自行验证\n\n9）产品迭代\n\n持续收集用户对新功能的反馈、并进行数据分析，从而验证改动效果，便于下一轮的更新迭代。\n\n\n\n## 二、开发规范\n\n### 开发前注意事项\n\n1）确保自己充分理解了业务和需求，需要先进行整体的方案设计；尤其是对于重要需求和核心业务，必须先跟组内同学核对方案并通过后，才能下手开发，避免重复工作。\n\n2）先熟悉项目再开发，建议阅读项目文档、项目代码、接口文档、前端组件文档等。\n\n3）慎重引入新的依赖或类库、或者升级版本，重大依赖变更需要和组内其他成员确认。\n\n4）熟悉团队已实现的功能和代码，尽量复用，避免重复开发。\n\n5）熟悉团队内部的研发规范，并在 IDE 中进行相应的配置，比如前端配置 ESLint、Prettier 等代码规范插件。\n\n\n\n### 开发中注意事项\n\n1）开发新功能时，确保从项目仓库拉取 **最新主分支** 的代码。\n\n2）每个功能都要新建自己的分支进行开发，**千万不要直接修改主分支的代码**！注意分支名称要使用英文、足够语义化，不要和其他人的混淆。\n\n3）开发时，尽量复用现有的功能、模块、类、方法、对象代码。有现成的代码，就不要再重复编写。如无法复用，可以适当通过注释说明。\n\n4）开发时，遵循团队内部的研发规范，尽量参考现有项目代码的写法，尤其是不要使用和原项目不一致的格式、命名、写法，避免特立独行。\n\n5）开发过程中，有任何不明确的地方，不要凭空猜测，及时去联系项目的其他成员或负责人确认。\n\n6）开发过程中，每隔一段时间（比如 1 - 3 天）可以使用 `git pull` 同步一下最新的主分支代码，防止合并代码冲突。\n\n7）开发过程中，注意整体时间进度的把控，先完成再完美，有风险时及时反馈。\n\n8）开发时，需要格外注意对异常情况的捕获和处理。\n\n9）每个分支尽量保证纯净，尽量减少每次开发和提交时改动的代码量。建议每次开分支只改一个功能、Bug 或模块，不要把多个不相关的功能写在一起，并且非必要不修改。\n\n10）完成部分功能开发后，一定要自测！自测时，可以 Mock 假数据。**注意一定不要在线上测试、一定不要影响线上数据！**\n\n\n\n## 三、代码提交规范\n\n1）只有通过测试和产品验收的代码，才能够发起合并到主分支的 PR 请求。在这之前可以提交到自己的分支。\n\n2）发起合并到主分支的 PR 前，**一定要完整阅读 3 遍自己的代码**，避免不规范的写法和无意义的改动。\n\n3）每次合并尽量只专注于一个功能或改动，避免多个功能耦合在一起合并，提高审查效率并降低改动风险。\n\n4）每次提交时，需要在 commit 信息中提供代码改动说明，还可以通过关联需求文档、测试用例、方案文档、效果截图等方式进行补充说明。\n\ncommit 信息可参考[《约定式提交》文档](https://www.conventionalcommits.org/zh-hans/v1.0.0/)，但不做强制要求。\n\n5）除非特殊情况，否则所有的代码必须经过至少一位项目负责人 Code Review 审核通过后，才能合并；并且只有合并到主分支的代码才允许发布上线。\n\n\n\n## 上线规范\n\n### 上线前注意事项\n\n1）上线前，除了严格验证功能特性能否正常运行、并符合需求外，还要格外关注程序的：\n\n- 健壮性。比如给用户友好的错误提示、输入校验。\n- 安全性。防止越权操作、输入校验。\n- 稳定性。尽量保证调用 100% 成功，如果有几率失败，要考虑重试或容错策略。\n\n2）除非特殊情况，只有经过产品验证的功能、通过代码审核的主分支代码才允许发布上线。\n\n3）除非特殊情况，尽量在工作日上线（建议周二 ~ 周四），保证上线后出了问题时能够及时修复。\n\n\n\n### 上线后注意事项\n\n1）上线后，一定要再次进行完整流程的测试，尤其要重点关注权限相关的功能测试。\n\n2）上线后，一定要在群内及时同步上线信息，周知相关的成员，如果遇到问题第一时间反馈。\n\n3）首次上线后，需要即时配置监控告警。\n\n4）上线验证通过、并经过内部群成员确认后，可以在外部用户群发布版本更新公告。\n\n5）上线后，即时更新项目的更新记录文档。\n\n6）注意，上线不是终点。上线后的一段时间（至少一周内），一定要持续观察自己负责的功能是否正常运行、持续接受用户反馈、通过数据分析来观察新功能的效果，期间有任何问题都需要即时修复处理，并且准备好下一期的改进迭代。\n\n\n\n",
        "category": "文章",
        "cover": null,
        "language": null,
        "externalLink": null,
        "shortLink": null,
        "componentName": null,
        "viewNum": 56,
        "thumbNum": 2,
        "favourNum": 3,
        "commentNum": 0,
        "priority": 0,
        "userId": "1601072287388278786",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2024-04-23 10:23:26",
        "updateTime": "2024-05-03 10:27:01",
        "user": {
          "id": "1601072287388278786",
          "planetCode": "1",
          "userName": "程序员鱼皮",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1601072287388278786/9vqTr3HM-WechatIMG1287.jpeg",
          "gender": 1,
          "userProfile": "这个网站的老大",
          "userRole": "admin",
          "interests": [
            "C++",
            "Java",
            "Python",
            "算法"
          ],
          "place": "上海",
          "birthday": "1998-11-03",
          "school": "东华大学",
          "major": "网络工程",
          "education": null,
          "graduationYear": 2020,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": 2,
          "direction": "后端",
          "goal": null,
          "github": "https://github.com/liyupi",
          "blog": "https://yupi.icu",
          "score": 3085,
          "coin": 170,
          "followeeNum": 1500,
          "followNum": 6,
          "followStatus": null,
          "vipExpireTime": "2287-05-20 01:46:39",
          "lastLoginTime": null,
          "createTime": "2022-12-09 12:32:33",
          "updateTime": "2024-05-03 03:15:29"
        },
        "tags": [
          "文章",
          "技术"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      }
    ],
    "total": "4246",
    "size": "8",
    "current": "1",
    "orders": [],
    "optimizeCountSql": true,
    "searchCount": true,
    "countId": null,
    "maxLimit": null,
    "pages": "531"
  },
  "message": "ok"
}